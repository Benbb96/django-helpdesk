# Generated by Django 2.2.19 on 2021-04-13 15:03

from datetime import timedelta
from django.db import migrations, models
from base.utils import office_time_between


def migrate_time_before_first_answer(apps, schema_editor):
    Ticket = apps.get_model("helpdesk", "Ticket")
    db_alias = schema_editor.connection.alias
    total = Ticket.objects.using(db_alias).count()
    i = 1
    for ticket in Ticket.objects.using(db_alias).all():
        print(f'{i}/{total}')
        i += 1

        first_answer = None
        for followup in ticket.followup_set.order_by('date'):
            if followup.public and followup.user and followup.user.is_staff:
                first_answer = followup
                break

        if first_answer:
            # If a ticket has a followup older than its creation (because of a fusion), return 0
            if ticket.created > first_answer.date:
                ticket.time_before_first_answer = timedelta(0)
                print(ticket.id)
            else:
                ticket.time_before_first_answer = office_time_between(ticket.created, first_answer.date)
            ticket.save()


class Migration(migrations.Migration):

    dependencies = [
        ('helpdesk', '0037_auto_20210112_1740'),
    ]

    operations = [
        migrations.AddField(
            model_name='ticket',
            name='time_before_first_answer',
            field=models.DurationField(blank=True, null=True, verbose_name='temps avant la première réponse'),
        ),
        migrations.RunPython(migrate_time_before_first_answer, migrations.RunPython.noop)
    ]
